apiVersion: apps/v1
kind: Deployment
metadata:
  name:  {{ .Values.frontend.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app:  {{ .Values.frontend.name }}
    tier: {{ .Values.frontend.tier }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.frontend.name }}
  replicas: {{ .Values.frontend.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  {{ .Values.frontend.name }}
        tier: {{ .Values.frontend.tier }}
    spec:
      containers:
      - name:  {{ .Values.frontend.name }}
        image: {{ .Values.frontend.image }}
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 300Mi
        env:
        - name: PORT
          value: {{ .Values.frontend.port | quote }}
        livenessProbe:
          tcpSocket:
            port: {{ .Values.frontend.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: {{ .Values.frontend.port }}
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        ports:
        - containerPort:  {{ .Values.frontend.port }}
          name:  {{ .Values.frontend.name }}
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.frontend.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app:  {{ .Values.frontend.name }}
    tier: {{ .Values.frontend.tier }}
spec:
  selector:
    app: {{ .Values.frontend.name }}
  type: ClusterIP
  sessionAffinity: None
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800
  ports:
  - name: {{ .Values.frontend.name }}
    port: {{ .Values.frontend.port }}